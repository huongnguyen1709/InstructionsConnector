[{"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/index.js":"1","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/App.js":"2","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/auth/SignIn.js":"3","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/auth/SignUp.js":"4","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/store.js":"5","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/reducers/index.js":"6","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/reducers/alert.js":"7","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/actions/types.js":"8","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/actions/auth.js":"9","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/reducers/auth.js":"10","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/utils/setAuthToken.js":"11","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/dashboard/Dashboard.js":"12","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/landing/Landing.js":"13","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/routing/PrivateRoute.js":"14","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/layout/NavBar.js":"15","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/actions/alert.js":"16","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/layout/Alert.js":"17","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/reducers/post.js":"18","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/actions/post.js":"19","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/layout/Spinner.js":"20","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/instructions/InstructionSummary.js":"21","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/instructions/InstructionDetail.js":"22","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/instructions/CreateInstruction.js":"23","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/instructions/EditInstruction.js":"24","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/questions/AddQuestion.js":"25","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/actions/question.js":"26","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/reducers/question.js":"27","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/questions/QuestionList.js":"28","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/questions/EditQuestion.js":"29","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/landing/QuestionPopup.js":"30","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/landing/StudentInstrucDetail.js":"31","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/landing/QuestionDetail.js":"32","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/landing/Huong.js":"33"},{"size":219,"mtime":1612354106740,"results":"34","hashOfConfig":"35"},{"size":2563,"mtime":1613466950054,"results":"36","hashOfConfig":"35"},{"size":1880,"mtime":1612883397775,"results":"37","hashOfConfig":"35"},{"size":2762,"mtime":1612883513993,"results":"38","hashOfConfig":"35"},{"size":389,"mtime":1613467322915,"results":"39","hashOfConfig":"35"},{"size":234,"mtime":1613042504500,"results":"40","hashOfConfig":"35"},{"size":438,"mtime":1612365540986,"results":"41","hashOfConfig":"35"},{"size":918,"mtime":1613336818080,"results":"42","hashOfConfig":"35"},{"size":1918,"mtime":1612883955716,"results":"43","hashOfConfig":"35"},{"size":1102,"mtime":1612883828138,"results":"44","hashOfConfig":"35"},{"size":242,"mtime":1612862751745,"results":"45","hashOfConfig":"35"},{"size":1476,"mtime":1613341040309,"results":"46","hashOfConfig":"35"},{"size":4152,"mtime":1613465163108,"results":"47","hashOfConfig":"35"},{"size":670,"mtime":1612945911585,"results":"48","hashOfConfig":"35"},{"size":1266,"mtime":1612976526224,"results":"49","hashOfConfig":"35"},{"size":320,"mtime":1613466806139,"results":"50","hashOfConfig":"35"},{"size":475,"mtime":1612947415457,"results":"51","hashOfConfig":"35"},{"size":1179,"mtime":1613332613839,"results":"52","hashOfConfig":"35"},{"size":2355,"mtime":1613335309707,"results":"53","hashOfConfig":"35"},{"size":258,"mtime":1612953786930,"results":"54","hashOfConfig":"35"},{"size":923,"mtime":1613345636312,"results":"55","hashOfConfig":"35"},{"size":3034,"mtime":1613341949824,"results":"56","hashOfConfig":"35"},{"size":1803,"mtime":1612976105875,"results":"57","hashOfConfig":"35"},{"size":2221,"mtime":1613334435714,"results":"58","hashOfConfig":"35"},{"size":3256,"mtime":1613334317026,"results":"59","hashOfConfig":"35"},{"size":2083,"mtime":1613336842085,"results":"60","hashOfConfig":"35"},{"size":1074,"mtime":1613335521382,"results":"61","hashOfConfig":"35"},{"size":3820,"mtime":1613336583405,"results":"62","hashOfConfig":"35"},{"size":3731,"mtime":1613340117449,"results":"63","hashOfConfig":"35"},{"size":1462,"mtime":1613410855535,"results":"64","hashOfConfig":"35"},{"size":889,"mtime":1613392064879,"results":"65","hashOfConfig":"35"},{"size":2010,"mtime":1613404917532,"results":"66","hashOfConfig":"35"},{"size":162,"mtime":1613466327459,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1siapl",{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"70"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"70"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"70"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"70"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"70"},"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/index.js",[],["154","155"],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/App.js",["156"],"import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport NavBar from './components/layout/NavBar';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport Alert from './components/layout/Alert';\nimport Dashboard from './components/dashboard/Dashboard';\nimport Landing from './components/landing/Landing';\nimport Huong from './components/landing/Huong';\nimport PrivateRoute from './components/routing/PrivateRoute';\nimport InstructionDetail from './components/instructions/InstructionDetail';\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport setAuthToken from './utils/setAuthToken';\nimport { loadUser } from './actions/auth';\nimport CreateInstruction from './components/instructions/CreateInstruction';\nimport EditInstruction from './components/instructions/EditInstruction';\nimport AddQuestion from './components/questions/AddQuestion';\nimport QuestionList from './components/questions/QuestionList';\nimport EditQuestion from './components/questions/EditQuestion';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <NavBar />\n          <Route exact path='/' component={Huong} />\n          <Alert />\n          <Switch>\n            <Route path='/login' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <PrivateRoute path='/dashboard' component={Dashboard} />\n            <PrivateRoute\n              path='/newInstruction'\n              component={CreateInstruction}\n            />\n            <Route\n              exact\n              path='/instructions/:id'\n              component={InstructionDetail}\n            />\n            <PrivateRoute\n              path='/instructions/:id/edit'\n              component={EditInstruction}\n            />\n            <PrivateRoute\n              path='/instructions/:id/newQuestion'\n              component={AddQuestion}\n            />\n            <PrivateRoute\n              exact\n              path='/instructions/:id/questions'\n              component={QuestionList}\n            />\n            <PrivateRoute\n              path='/instructions/:instructionId/questions/:questionId/edit'\n              component={EditQuestion}\n            />\n          </Switch>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/auth/SignIn.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/auth/SignUp.js",["157"],"import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alert';\nimport { signup } from '../../actions/auth';\nimport PropTypes from 'prop-types';\nimport { sign } from 'jsonwebtoken';\n\nconst SignUp = ({ setAlert, signup, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert('Password do not match', 'danger');\n    } else {\n      signup({ name, email, password });\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <div className='container'>\n      <form onSubmit={(e) => onSubmit(e)} className='white'>\n        <h5 className='grey-text text-darken-3'>Create Your Account</h5>\n\n        <div className='input-field'>\n          <label htmlFor='name'>Your name</label>\n          <input\n            type='text'\n            name='name'\n            value={name}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n\n        <div className='input-field'>\n          <label htmlFor='email'>Email</label>\n          <input\n            type='email'\n            name='email'\n            value={email}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n\n        <div className='input-field'>\n          <label htmlFor='password'>Password</label>\n          <input\n            type='password'\n            name='password'\n            value={password}\n            onChange={(e) => onChange(e)}\n            minLength='6'\n            required\n          />\n        </div>\n\n        <div className='input-field'>\n          <label htmlFor='password'>Confirm Password</label>\n          <input\n            type='password'\n            name='password2'\n            value={password2}\n            onChange={(e) => onChange(e)}\n            minLength='6'\n            required\n          />\n        </div>\n\n        <div className='input-field'>\n          <button className='btn pink lighten-1 z-depth-0'>Sign Up</button>\n          <div className='red-text center'></div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nSignUp.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  signup: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { setAlert, signup })(SignUp);\n","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/store.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/reducers/index.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/reducers/alert.js",["158"],"import {SET_ALERT, REMOVE_ALERT} from '../actions/types'\n\nconst initialState = []\n\nexport default function(state = initialState, action) {\n    const {type, payload} = action\n\n    switch(type) {\n        case SET_ALERT:\n            return [...state, payload] // we have the data of action in payload\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload)\n        default: \n            return state\n    }\n}","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/actions/types.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/actions/auth.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/reducers/auth.js",["159"],"import {\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload,\n      };\n    case SIGNUP_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      console.log(payload);\n      console.log(payload.token);\n      console.log(state);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case SIGNUP_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/utils/setAuthToken.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/dashboard/Dashboard.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/landing/Landing.js",["160","161","162","163","164","165","166","167"],"import React, { useEffect, Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layout/Spinner';\nimport { getPosts } from '../../actions/post';\nimport { getQuestions } from '../../actions/question';\nimport InstructionSummary from '../instructions/InstructionSummary';\nimport QuestionPopup from './QuestionPopup';\nimport StudentInstrucDetail from './StudentInstrucDetail';\n\nconst Landing = ({\n  isAuthenticated,\n  getPosts,\n  post: { posts, loading },\n  getQuestions,\n  questions,\n}) => {\n  useEffect(() => {\n    getPosts();\n    getQuestions();\n  }, [getPosts, getQuestions]);\n\n  const [data, setData] = useState({\n    index: 0,\n    instructions: [],\n    instruction: null,\n    disabled: false,\n    showQuestion: false,\n    showDetail: false,\n    questionPopup: [],\n    currentInstruction: null,\n  });\n\n  const {\n    disabled,\n    index,\n    instructions,\n    showQuestion,\n    showDetail,\n    instruction,\n    questionPopup,\n    currentInstruction,\n  } = data;\n\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  const onMoveToNextIns = () => {\n    const currentInstruction = posts[index];\n    const questionPopup =\n      questions &&\n      questions.filter(\n        (question) => question.postId === currentInstruction._id\n      );\n    console.log(questionPopup);\n    if (questionPopup.length > 0) {\n      console.log('there is a question will be popup in next intruction');\n    }\n\n    setData({\n      ...data,\n      index: index + 1,\n      instructions: [...instructions, posts[index]],\n      questionPopup: questionPopup,\n      currentInstruction: currentInstruction,\n    });\n  };\n\n  const onShowQuestion = () => {\n    setData({ ...data, showQuestion: true });\n  };\n\n  const onCloseDetail = () => {\n    setData({\n      ...data,\n      showDetail: false,\n    });\n  };\n\n  const onCloseQuestion = () => {\n    setData({\n      ...data,\n      showQuestion: false,\n    });\n  };\n\n  console.log(showQuestion);\n  console.log(index);\n  console.log(instructions);\n  console.log(questionPopup);\n\n  return loading ? (\n    <Spinner />\n  ) : posts ? (\n    <Fragment>\n      <div className={showDetail ? 'container relative' : 'container'}>\n        <div className={showDetail || showQuestion ? 'row invisible' : 'row'}>\n          <div className='col s12 m6 offset-m2'>\n            <div className='section'>\n              {instructions &&\n                instructions.map((instruction) => {\n                  return (\n                    <div\n                      key={instruction._id}\n                      className='card'\n                      onClick={(e) =>\n                        setData({\n                          ...data,\n                          showDetail: true,\n                          instruction: instruction,\n                        })\n                      }\n                    >\n                      <InstructionSummary instruction={instruction} />\n                    </div>\n                  );\n                })}\n            </div>\n\n            {/* Button to show Next Instruction Summary */}\n            <button\n              onClick={onMoveToNextIns}\n              className='btn waves-effect waves-light flex-row'\n            >\n              See Instructions\n              <i className='material-icons '>arrow_downward</i>\n            </button>\n\n            <button\n              onClick={onShowQuestion}\n              className='btn waves-effect waves-light flex-row mt-30'\n            >\n              Question PopUp\n            </button>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  ) : (\n    <p>There is no instruction. Please add instruction !</p>\n  );\n};\n\nLanding.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  getPosts: PropTypes.func.isRequired,\n  getQuestions: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  post: state.post,\n  questions: state.question.questions,\n});\n\nexport default connect(mapStateToProps, { getPosts, getQuestions })(Landing);\n","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/routing/PrivateRoute.js",["168"],"import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport auth from '../../reducers/auth';\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      !isAuthenticated && !loading ? (\n        <Redirect to='login' />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/layout/NavBar.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/actions/alert.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/layout/Alert.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/reducers/post.js",["169"],"import {\n  GET_POSTS,\n  POST_ERROR,\n  DELETE_POST,\n  ADD_POST,\n  EDIT_POST,\n  GET_POST_BY_ID,\n} from '../actions/types';\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  loadingById: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false,\n      };\n    case GET_POST_BY_ID:\n      console.log(payload);\n      return {\n        ...state,\n        post: payload,\n        loading: false,\n        loadingById: false,\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [...state.posts, payload],\n        loading: false,\n      };\n    case EDIT_POST:\n      return {\n        ...state,\n        posts: [...state.posts, payload],\n        loading: false,\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== payload),\n        loading: false,\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/actions/post.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/layout/Spinner.js",["170"],"import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => (\n  <Fragment>\n    <img\n      src={spinner}\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n      alt='Loading...'\n    />\n  </Fragment>\n);\n","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/instructions/InstructionSummary.js",["171"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nconst InstructionSummary = ({ user, instruction, isAuthenticated }) => {\n  const onAuthor = () => {\n    if (isAuthenticated && user._id && user._id === instruction.user) {\n      return <p>Posted by You</p>;\n    } else {\n      return <p>Posted by {instruction.name}</p>;\n    }\n  };\n\n  return (\n    <div className='card z-depth-0 instruction-summary'>\n      <div className='card-content grey-text text-darken-3'>\n        <span className='card-title font-weight-350'>{instruction.title}</span>\n\n        <div className='mt-30'>\n          {onAuthor()}\n          <p className='grey-text'>{instruction.date}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nInstructionSummary.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  user: PropTypes.object,\n  instruction: PropTypes.object.isRequired,\n};\n\nexport default InstructionSummary;\n","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/instructions/InstructionDetail.js",["172"],"import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { Link } from 'react-router-dom';\nimport { deletePost, getPostByID } from '../../actions/post';\n\nconst InstructionDetail = ({\n  user,\n  post: { post, loadingById },\n  deletePost,\n  getPostByID,\n  history,\n  postId,\n  isAuthenticated,\n}) => {\n  useEffect(() => {\n    getPostByID(postId);\n  }, [getPostByID]);\n\n  const onAuthor = () => {\n    if (isAuthenticated && user._id && user._id === post.user) {\n      return <p>Posted by You</p>;\n    } else {\n      return <p>Posted by {post.name}</p>;\n    }\n  };\n\n  const onActionInstruction = () => {\n    if (isAuthenticated && user._id && user._id === post.user) {\n      return (\n        <div>\n          <Link\n            to={'/instructions/' + post._id + '/newQuestion'}\n            className='btn teal lighten-1 z-depth-0 mr-30'\n          >\n            Add Question\n          </Link>\n          <Link\n            to={{\n              pathname: `/instructions/${post._id}/edit`,\n              post,\n            }}\n            className='btn teal lighten-1 z-depth-0 mr-30'\n          >\n            Edit\n          </Link>\n          <button\n            onClick={(e) => {\n              deletePost(post._id);\n              history.push('/');\n            }}\n            className='btn teal lighten-1 z-depth-0'\n          >\n            Delete\n          </button>\n        </div>\n      );\n    }\n  };\n\n  return loadingById ? (\n    <Spinner />\n  ) : (\n    <div className='container section'>\n      <div className='card z-depth-0'>\n        <div className='card-content flex-column'>\n          <span className='card-title teal-text center heading'>\n            {post.title}\n          </span>\n          <p className='mt-30'>{post.content}</p>\n        </div>\n        <div className='card-action grey lighten-4 grey-text flex-row'>\n          <Link to='/' className='btn teal lighten-1 z-depth-0'>\n            Back\n          </Link>\n          <span className='center'>\n            {onAuthor()}\n            <div>{post.date}</div>\n          </span>\n          {isAuthenticated ? (\n            <Link\n              to={'/instructions/' + post._id + '/questions'}\n              className='btn teal lighten-1 z-depth-0 mr-30'\n            >\n              See Question\n            </Link>\n          ) : null}\n          {onActionInstruction()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nInstructionDetail.propTypes = {\n  post: PropTypes.object.isRequired,\n  user: PropTypes.object.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  getPostByID: PropTypes.func.isRequired,\n  postId: PropTypes.string,\n  isAuthenticated: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    postId: ownProps.match.params.id,\n    post: state.post,\n    user: state.auth.user,\n    isAuthenticated: state.auth.isAuthenticated,\n  };\n};\n\nexport default connect(mapStateToProps, { deletePost, getPostByID })(\n  InstructionDetail\n);\n","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/instructions/CreateInstruction.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/instructions/EditInstruction.js",["173"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../actions/post';\nimport { Link } from 'react-router-dom';\nimport { editPost } from '../../actions/post';\n\nconst EditInstruction = ({ post, editPost, history, instructionId }) => {\n  const [formData, setFormData] = useState({\n    title: post.title,\n    content: post.content,\n  });\n\n  const { title, content } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    editPost(formData, post._id);\n    setFormData({\n      title: '',\n      content: '',\n    });\n    history.push('/');\n  };\n\n  return (\n    <div className='container'>\n      <form onSubmit={(e) => onSubmit(e)} className='white'>\n        <h5 className='grey-text text-darken-3'>Edit Instruction</h5>\n\n        <div className='input-field'>\n          <label className={title ? 'active' : null} htmlFor='title'>\n            Title\n          </label>\n          <input\n            type='text'\n            name='title'\n            value={title}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n\n        <div className='input-field'>\n          <label className={title ? 'active' : null} htmlFor='content'>\n            Instruction Content\n          </label>\n          <textarea\n            name='content'\n            value={content}\n            className='materialize-textarea'\n            onChange={(e) => onChange(e)}\n            required\n          ></textarea>\n        </div>\n\n        <div className='flex-row'>\n          <Link\n            to={`/instructions/${instructionId}`}\n            className='btn teal lighten-1 z-depth-0'\n          >\n            Cancel\n          </Link>\n          <button className='btn teal lighten-1 z-depth-0'>Save</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nEditInstruction.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  post: ownProps.location.post,\n  instructionId: ownProps.match.params.id,\n});\n\nexport default connect(mapStateToProps, { editPost })(EditInstruction);\n","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/questions/AddQuestion.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/actions/question.js",["174"],"import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  GET_QUESTIONS,\n  GET_QUESTION_BY_ID,\n  QUESTION_ERROR,\n  DELETE_QUESTION,\n  ADD_QUESTION,\n  EDIT_QUESTION,\n} from './types';\n\n// Get questions\nexport const getQuestions = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/questions');\n\n    dispatch({\n      type: GET_QUESTIONS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: QUESTION_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete question\nexport const deleteQuestion = (id) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/questions/${id}`);\n\n    dispatch({\n      type: DELETE_QUESTION,\n      payload: id,\n    });\n\n    dispatch(setAlert('Question Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: QUESTION_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add question\nexport const addQuestion = (newQuestion) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post('/api/questions', newQuestion, config);\n    dispatch({\n      type: ADD_QUESTION,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Question Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: QUESTION_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Edit question\nexport const editQuestion = (formData, id) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  try {\n    const res = await axios.put(`/api/questions/${id}`, formData, config);\n    console.log(res.data);\n    dispatch({\n      type: EDIT_QUESTION,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Question Edited', 'success'));\n  } catch (err) {\n    dispatch({\n      type: QUESTION_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/reducers/question.js",["175"],"import {\n  GET_QUESTIONS,\n  QUESTION_ERROR,\n  DELETE_QUESTION,\n  ADD_QUESTION,\n  EDIT_QUESTION,\n} from '../actions/types';\n\nconst initialState = {\n  questions: [],\n  question: null,\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_QUESTIONS:\n      return {\n        ...state,\n        questions: payload,\n        loading: false,\n      };\n    case ADD_QUESTION:\n      return {\n        ...state,\n        questions: [...state.questions, payload],\n        loading: false,\n      };\n    case EDIT_QUESTION:\n      return {\n        ...state,\n        questions: [...state.questions, payload],\n        loading: false,\n      };\n    case DELETE_QUESTION:\n      return {\n        ...state,\n        questions: state.questions.filter(\n          (question) => question._id !== payload\n        ),\n        loading: false,\n      };\n    case QUESTION_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/questions/QuestionList.js",["176","177"],"import React, { useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getQuestions } from '../../actions/question';\nimport { getPostByID } from '../../actions/post';\nimport Spinner from '../layout/Spinner';\n\nconst QuestionList = ({\n  getQuestions,\n  question: { questions, loading },\n  instructionId,\n  getPostByID,\n  post,\n}) => {\n  useEffect(() => {\n    getQuestions();\n    getPostByID(instructionId);\n  }, [getQuestions, getPostByID]);\n\n  console.log(instructionId);\n  console.log(questions);\n\n  questions =\n    questions &&\n    questions.filter((question) => {\n      console.log(question.postId);\n      console.log(instructionId);\n      return question.postId === instructionId;\n    });\n  console.log(questions);\n\n  const onShowQuestion = () => {\n    if (questions && questions.length > 0) {\n      return questions.map((question) => {\n        if (question) {\n          return (\n            <Link\n              to={{\n                pathname: `/instructions/${question.postId}/questions/${question._id}/edit`,\n                question,\n              }}\n              key={question._id}\n            >\n              <div className='card mt-60'>\n                <div className='card-content grey-text text-darken-3'>\n                  <h6 className='bold'>{question.question}</h6>\n                  <div className='mt-30'>\n                    <h6>\n                      <span className='bold'> Option 1:</span> &nbsp;{' '}\n                      <span className='italic'>{question.answer2}</span>\n                    </h6>\n                    <h6>\n                      <span className='bold'> Option 2:</span> &nbsp;{' '}\n                      <span className='italic'>{question.answer3}</span>\n                    </h6>\n                    <h6>\n                      <span className='bold'> Option 3:</span> &nbsp;{' '}\n                      <span className='italic'>{question.answer4}</span>\n                    </h6>\n                    <h6>\n                      <span className='bold'> Right Answer:</span> &nbsp;{' '}\n                      <span className='italic red-text'>\n                        {question.rightAnswer}\n                      </span>\n                    </h6>\n                  </div>\n                </div>\n              </div>\n            </Link>\n          );\n        } else {\n          return (\n            <h6 className='mt-60 center' key='no-question'>\n              There is no question. Please add question !\n            </h6>\n          );\n        }\n      });\n    } else {\n      return (\n        <h6 className='mt-60 center'>\n          There is no question. Please add question !\n        </h6>\n      );\n    }\n  };\n\n  return loading ? (\n    <Spinner />\n  ) : (\n    <div className='row'>\n      <div className='col s12 m4 offset-m4'>\n        <div className='card z-depth-0 instruction-summary'>\n          <div className='card-content grey-text text-darken-3'>\n            <span className='card-title teal-text center heading'>\n              {post.title}\n            </span>\n            {onShowQuestion()}\n            <Link\n              to={`/instructions/${instructionId}`}\n              className='btn teal lighten-1 z-depth-0 mt-60'\n            >\n              Back\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nQuestionList.propTypes = {\n  getQuestions: PropTypes.func.isRequired,\n  getPostByID: PropTypes.func.isRequired,\n  question: PropTypes.object.isRequired,\n  instructionId: PropTypes.string,\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  question: state.question,\n  instructionId: ownProps.match.params.id,\n  post: state.post.post,\n});\n\nexport default connect(mapStateToProps, { getQuestions, getPostByID })(\n  QuestionList\n);\n","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/questions/EditQuestion.js",["178"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../actions/post';\nimport { Link } from 'react-router-dom';\nimport { editQuestion } from '../../actions/question';\n\nconst EditQuestion = ({\n  prevQuestion,\n  editQuestion,\n  history,\n  instructionId,\n  questionId,\n}) => {\n  const [formData, setFormData] = useState({\n    question: prevQuestion.question,\n    rightAnswer: prevQuestion.rightAnswer,\n    answer2: prevQuestion.answer2,\n    answer3: prevQuestion.answer3,\n    answer4: prevQuestion.answer4,\n  });\n\n  const { question, rightAnswer, answer2, answer3, answer4 } = formData;\n  console.log(question);\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    editQuestion(formData, prevQuestion._id);\n    history.push(`/instructions/${instructionId}`);\n  };\n\n  return (\n    <div className='container'>\n      <form onSubmit={(e) => onSubmit(e)} className='white'>\n        <h5 className='grey-text text-darken-3'>Edit Question</h5>\n\n        <div className='input-field'>\n          <label className={question ? 'active' : null} htmlFor='question'>\n            Question\n          </label>\n          <input\n            type='text'\n            name='question'\n            value={question}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n\n        <div className='input-field'>\n          <label\n            className={rightAnswer ? 'active' : null}\n            htmlFor='rightAnswer'\n          >\n            Right Answer\n          </label>\n          <textarea\n            name='rightAnswer'\n            value={rightAnswer}\n            className='materialize-textarea'\n            onChange={(e) => onChange(e)}\n            required\n          ></textarea>\n        </div>\n\n        <div className='input-field'>\n          <label className={answer2 ? 'active' : null} htmlFor='answer2'>\n            Answer 2\n          </label>\n          <textarea\n            name='answer2'\n            value={answer2}\n            className='materialize-textarea'\n            onChange={(e) => onChange(e)}\n            required\n          ></textarea>\n        </div>\n\n        <div className='input-field'>\n          <label className={answer3 ? 'active' : null} htmlFor='answer3'>\n            Answer 3\n          </label>\n          <textarea\n            name='answer3'\n            value={answer3}\n            className='materialize-textarea'\n            onChange={(e) => onChange(e)}\n            required\n          ></textarea>\n        </div>\n\n        <div className='input-field'>\n          <label className={answer4 ? 'active' : null} htmlFor='answer4'>\n            Answer 4\n          </label>\n          <textarea\n            name='answer4'\n            value={answer4}\n            className='materialize-textarea'\n            onChange={(e) => onChange(e)}\n            required\n          ></textarea>\n        </div>\n\n        <div className='flex-row'>\n          <Link\n            to={`/instructions/${instructionId}/questions`}\n            className='btn teal lighten-1 z-depth-0'\n          >\n            Cancel\n          </Link>\n          <button className='btn teal lighten-1 z-depth-0'>Save</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nEditQuestion.propTypes = {\n  prevQuestion: PropTypes.object.isRequired,\n  instructionId: PropTypes.string,\n  editQuestion: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  prevQuestion: ownProps.location.question,\n  instructionId: ownProps.match.params.instructionId,\n});\n\nexport default connect(mapStateToProps, { editQuestion })(EditQuestion);\n","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/landing/QuestionPopup.js",["179","180","181","182","183"],"import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { disconnect } from 'mongoose';\nimport QuestionDetail from './QuestionDetail';\nimport e from 'express';\n\nconst QuestionPopup = ({ instruction, questions, onCloseQuestion }) => {\n  const [data, setData] = useState({\n    questionLoaded: [questions[0]],\n    index: 0,\n    answer: false,\n  });\n\n  const { questionLoaded, index, answer } = data;\n  console.log(questionLoaded);\n\n  const onAnswer = (userAnswer) => {\n    setData({\n      ...data,\n      answer: userAnswer,\n    });\n  };\n\n  const onHandleSubmit = () => {\n    e.preventDefault();\n  };\n\n  return (\n    <Fragment>\n      <div className='section'>\n        <form onSubmit={onHandleSubmit}>\n          {questions &&\n            questions.map((question) => (\n              <QuestionDetail\n                key={question._id}\n                question={question}\n                instruction={instruction}\n                onAnswer={(answer) => onAnswer(answer)}\n              />\n            ))}\n          <div className='flex-row'>\n            <button\n              onClick={onCloseQuestion}\n              className='btn teal lighten-1 z-depth-0'\n            >\n              Cancel\n            </button>\n            <button className='btn teal lighten-1 z-depth-0'>Answer</button>\n          </div>\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nQuestionPopup.propTypes = {};\n\nexport default QuestionPopup;\n","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/landing/StudentInstrucDetail.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/landing/QuestionDetail.js",["184"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst QuestionDetail = ({ question, instruction, onAnswer }) => {\n  const handleOptionChange = (e) => {\n    const selectedAnswer = e.target.value;\n    const answer = selectedAnswer === question.rightAnswer ? true : false;\n    onAnswer(answer);\n\n    console.log(answer);\n  };\n\n  return (\n    <div key={question.id} className='card z-depth-0'>\n      <div className='card-content flex-column'>\n        <span className='card-title teal-text center heading'>\n          {instruction.title}\n        </span>\n\n        <h6>{question.question}</h6>\n        <h6>\n          <label>\n            <input\n              className='with-gap'\n              name={`${question._id}`}\n              type='radio'\n              value={question.rightAnswer}\n              onChange={handleOptionChange}\n            />\n            <span>{question.rightAnswer}</span>\n          </label>\n        </h6>\n        <h6>\n          <label>\n            <input\n              className='with-gap'\n              name={`${question._id}`}\n              type='radio'\n              value={question.answer2}\n              onChange={handleOptionChange}\n            />\n            <span>{question.answer2}</span>\n          </label>\n        </h6>\n        <h6>\n          <label>\n            <input\n              className='with-gap'\n              name={`${question._id}`}\n              type='radio'\n              value={question.answer3}\n              onChange={handleOptionChange}\n            />\n            <span>{question.answer3}</span>\n          </label>\n        </h6>\n        <h6>\n          <label>\n            <input\n              className='with-gap'\n              name={`${question._id}`}\n              type='radio'\n              value={question.answer4}\n              onChange={handleOptionChange}\n            />\n            <span>{question.answer4}</span>\n          </label>\n        </h6>\n      </div>\n    </div>\n  );\n};\n\nQuestionDetail.propTypes = {};\n\nexport default QuestionDetail;\n",["185","186"],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/landing/Huong.js",["187"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Huong = () => {\n  return <div>Hello</div>;\n};\n\nHuong.propTypes = {};\n\nexport default Huong;\n",{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":8,"column":8,"nodeType":"194","messageId":"195","endLine":8,"endColumn":15},{"ruleId":"192","severity":1,"message":"196","line":7,"column":10,"nodeType":"194","messageId":"195","endLine":7,"endColumn":14},{"ruleId":"197","severity":1,"message":"198","line":5,"column":1,"nodeType":"199","endLine":16,"endColumn":2},{"ruleId":"197","severity":1,"message":"198","line":18,"column":1,"nodeType":"199","endLine":55,"endColumn":2},{"ruleId":"192","severity":1,"message":"200","line":2,"column":10,"nodeType":"194","messageId":"195","endLine":2,"endColumn":14},{"ruleId":"192","severity":1,"message":"201","line":10,"column":8,"nodeType":"194","messageId":"195","endLine":10,"endColumn":21},{"ruleId":"192","severity":1,"message":"202","line":11,"column":8,"nodeType":"194","messageId":"195","endLine":11,"endColumn":28},{"ruleId":"192","severity":1,"message":"203","line":37,"column":5,"nodeType":"194","messageId":"195","endLine":37,"endColumn":13},{"ruleId":"192","severity":1,"message":"204","line":42,"column":5,"nodeType":"194","messageId":"195","endLine":42,"endColumn":16},{"ruleId":"192","severity":1,"message":"205","line":44,"column":5,"nodeType":"194","messageId":"195","endLine":44,"endColumn":23},{"ruleId":"192","severity":1,"message":"206","line":76,"column":9,"nodeType":"194","messageId":"195","endLine":76,"endColumn":22},{"ruleId":"192","severity":1,"message":"207","line":83,"column":9,"nodeType":"194","messageId":"195","endLine":83,"endColumn":24},{"ruleId":"192","severity":1,"message":"208","line":5,"column":8,"nodeType":"194","messageId":"195","endLine":5,"endColumn":12},{"ruleId":"197","severity":1,"message":"198","line":18,"column":1,"nodeType":"199","endLine":63,"endColumn":2},{"ruleId":"197","severity":1,"message":"209","line":4,"column":1,"nodeType":"199","endLine":12,"endColumn":3},{"ruleId":"192","severity":1,"message":"210","line":3,"column":8,"nodeType":"194","messageId":"195","endLine":3,"endColumn":14},{"ruleId":"211","severity":1,"message":"212","line":19,"column":6,"nodeType":"213","endLine":19,"endColumn":19,"suggestions":"214"},{"ruleId":"192","severity":1,"message":"215","line":4,"column":10,"nodeType":"194","messageId":"195","endLine":4,"endColumn":17},{"ruleId":"192","severity":1,"message":"216","line":5,"column":3,"nodeType":"194","messageId":"195","endLine":5,"endColumn":21},{"ruleId":"197","severity":1,"message":"198","line":16,"column":1,"nodeType":"199","endLine":55,"endColumn":2},{"ruleId":"192","severity":1,"message":"217","line":1,"column":28,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"211","severity":1,"message":"218","line":19,"column":6,"nodeType":"213","endLine":19,"endColumn":33,"suggestions":"219"},{"ruleId":"192","severity":1,"message":"215","line":4,"column":10,"nodeType":"194","messageId":"195","endLine":4,"endColumn":17},{"ruleId":"192","severity":1,"message":"220","line":1,"column":27,"nodeType":"194","messageId":"195","endLine":1,"endColumn":36},{"ruleId":"192","severity":1,"message":"221","line":2,"column":8,"nodeType":"194","messageId":"195","endLine":2,"endColumn":17},{"ruleId":"192","severity":1,"message":"222","line":3,"column":10,"nodeType":"194","messageId":"195","endLine":3,"endColumn":20},{"ruleId":"192","severity":1,"message":"223","line":14,"column":27,"nodeType":"194","messageId":"195","endLine":14,"endColumn":32},{"ruleId":"192","severity":1,"message":"224","line":14,"column":34,"nodeType":"194","messageId":"195","endLine":14,"endColumn":40},{"ruleId":"192","severity":1,"message":"221","line":2,"column":8,"nodeType":"194","messageId":"195","endLine":2,"endColumn":17},{"ruleId":"188","replacedBy":"225"},{"ruleId":"190","replacedBy":"226"},{"ruleId":"192","severity":1,"message":"221","line":2,"column":8,"nodeType":"194","messageId":"195","endLine":2,"endColumn":17},"no-native-reassign",["227"],"no-negated-in-lhs",["228"],"no-unused-vars","'Landing' is defined but never used.","Identifier","unusedVar","'sign' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Link' is defined but never used.","'QuestionPopup' is defined but never used.","'StudentInstrucDetail' is defined but never used.","'disabled' is assigned a value but never used.","'instruction' is assigned a value but never used.","'currentInstruction' is assigned a value but never used.","'onCloseDetail' is assigned a value but never used.","'onCloseQuestion' is assigned a value but never used.","'auth' is defined but never used.","Assign arrow function to a variable before exporting as module default","'moment' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postId'. Either include it or remove the dependency array.","ArrayExpression",["229"],"'addPost' is defined but never used.","'GET_QUESTION_BY_ID' is defined but never used.","'Fragment' is defined but never used.","React Hook useEffect has a missing dependency: 'instructionId'. Either include it or remove the dependency array.",["230"],"'useEffect' is defined but never used.","'PropTypes' is defined but never used.","'disconnect' is defined but never used.","'index' is assigned a value but never used.","'answer' is assigned a value but never used.",["227"],["228"],"no-global-assign","no-unsafe-negation",{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},"Update the dependencies array to be: [getPostByID, postId]",{"range":"235","text":"236"},"Update the dependencies array to be: [getQuestions, getPostByID, instructionId]",{"range":"237","text":"238"},[457,470],"[getPostByID, postId]",[516,543],"[getQuestions, getPostByID, instructionId]"]