[{"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/index.js":"1","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/App.js":"2","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/auth/SignIn.js":"3","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/auth/SignUp.js":"4","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/store.js":"5","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/reducers/index.js":"6","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/reducers/alert.js":"7","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/actions/types.js":"8","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/actions/auth.js":"9","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/reducers/auth.js":"10","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/utils/setAuthToken.js":"11","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/dashboard/Dashboard.js":"12","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/routing/PrivateRoute.js":"13","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/layout/NavBar.js":"14","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/actions/alert.js":"15","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/layout/Alert.js":"16","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/reducers/post.js":"17","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/actions/post.js":"18","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/layout/Spinner.js":"19","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/instructions/InstructionSummary.js":"20","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/instructions/InstructionDetail.js":"21","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/instructions/CreateInstruction.js":"22","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/instructions/EditInstruction.js":"23","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/questions/AddQuestion.js":"24","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/actions/question.js":"25","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/reducers/question.js":"26","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/questions/QuestionList.js":"27","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/questions/EditQuestion.js":"28","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/student/Landing.js":"29","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/student/StudentInstrucDetail.js":"30","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/student/QuestionPopup.js":"31","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/student/QuestionDetail.js":"32"},{"size":665,"mtime":1613564160778,"results":"33","hashOfConfig":"34"},{"size":2518,"mtime":1613650207002,"results":"35","hashOfConfig":"34"},{"size":1880,"mtime":1612883397775,"results":"36","hashOfConfig":"34"},{"size":2725,"mtime":1613670604638,"results":"37","hashOfConfig":"34"},{"size":389,"mtime":1613467322915,"results":"38","hashOfConfig":"34"},{"size":234,"mtime":1613042504500,"results":"39","hashOfConfig":"34"},{"size":438,"mtime":1612365540986,"results":"40","hashOfConfig":"34"},{"size":918,"mtime":1613336818080,"results":"41","hashOfConfig":"34"},{"size":1918,"mtime":1613670468912,"results":"42","hashOfConfig":"34"},{"size":1102,"mtime":1612883828138,"results":"43","hashOfConfig":"34"},{"size":242,"mtime":1612862751745,"results":"44","hashOfConfig":"34"},{"size":1476,"mtime":1613341040309,"results":"45","hashOfConfig":"34"},{"size":670,"mtime":1612945911585,"results":"46","hashOfConfig":"34"},{"size":1266,"mtime":1612976526224,"results":"47","hashOfConfig":"34"},{"size":320,"mtime":1613466806139,"results":"48","hashOfConfig":"34"},{"size":495,"mtime":1613563988598,"results":"49","hashOfConfig":"34"},{"size":1179,"mtime":1613332613839,"results":"50","hashOfConfig":"34"},{"size":2355,"mtime":1613335309707,"results":"51","hashOfConfig":"34"},{"size":258,"mtime":1612953786930,"results":"52","hashOfConfig":"34"},{"size":923,"mtime":1613345636312,"results":"53","hashOfConfig":"34"},{"size":3042,"mtime":1613670674461,"results":"54","hashOfConfig":"34"},{"size":1803,"mtime":1612976105875,"results":"55","hashOfConfig":"34"},{"size":2175,"mtime":1613670637870,"results":"56","hashOfConfig":"34"},{"size":3275,"mtime":1613652274345,"results":"57","hashOfConfig":"34"},{"size":2083,"mtime":1613336842085,"results":"58","hashOfConfig":"34"},{"size":1074,"mtime":1613335521382,"results":"59","hashOfConfig":"34"},{"size":3720,"mtime":1613651807773,"results":"60","hashOfConfig":"34"},{"size":4130,"mtime":1613652835806,"results":"61","hashOfConfig":"34"},{"size":5261,"mtime":1613669757130,"results":"62","hashOfConfig":"34"},{"size":930,"mtime":1613489221248,"results":"63","hashOfConfig":"34"},{"size":1548,"mtime":1613669848898,"results":"64","hashOfConfig":"34"},{"size":2128,"mtime":1613669868721,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1siapl",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/index.js",[],["141","142"],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/App.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/auth/SignIn.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/auth/SignUp.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/store.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/reducers/index.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/reducers/alert.js",["143"],"import {SET_ALERT, REMOVE_ALERT} from '../actions/types'\n\nconst initialState = []\n\nexport default function(state = initialState, action) {\n    const {type, payload} = action\n\n    switch(type) {\n        case SET_ALERT:\n            return [...state, payload] // we have the data of action in payload\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload)\n        default: \n            return state\n    }\n}","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/actions/types.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/actions/auth.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/reducers/auth.js",["144"],"import {\n  SIGNUP_SUCCESS,\n  SIGNUP_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload,\n      };\n    case SIGNUP_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      console.log(payload);\n      console.log(payload.token);\n      console.log(state);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case SIGNUP_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/utils/setAuthToken.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/dashboard/Dashboard.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/routing/PrivateRoute.js",["145"],"import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport auth from '../../reducers/auth';\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      !isAuthenticated && !loading ? (\n        <Redirect to='login' />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/layout/NavBar.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/actions/alert.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/layout/Alert.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/reducers/post.js",["146"],"import {\n  GET_POSTS,\n  POST_ERROR,\n  DELETE_POST,\n  ADD_POST,\n  EDIT_POST,\n  GET_POST_BY_ID,\n} from '../actions/types';\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  loadingById: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false,\n      };\n    case GET_POST_BY_ID:\n      console.log(payload);\n      return {\n        ...state,\n        post: payload,\n        loading: false,\n        loadingById: false,\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [...state.posts, payload],\n        loading: false,\n      };\n    case EDIT_POST:\n      return {\n        ...state,\n        posts: [...state.posts, payload],\n        loading: false,\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== payload),\n        loading: false,\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/actions/post.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/layout/Spinner.js",["147"],"import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => (\n  <Fragment>\n    <img\n      src={spinner}\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n      alt='Loading...'\n    />\n  </Fragment>\n);\n","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/instructions/InstructionSummary.js",["148"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nconst InstructionSummary = ({ user, instruction, isAuthenticated }) => {\n  const onAuthor = () => {\n    if (isAuthenticated && user._id && user._id === instruction.user) {\n      return <p>Posted by You</p>;\n    } else {\n      return <p>Posted by {instruction.name}</p>;\n    }\n  };\n\n  return (\n    <div className='card z-depth-0 instruction-summary'>\n      <div className='card-content grey-text text-darken-3'>\n        <span className='card-title font-weight-350'>{instruction.title}</span>\n\n        <div className='mt-30'>\n          {onAuthor()}\n          <p className='grey-text'>{instruction.date}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nInstructionSummary.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  user: PropTypes.object,\n  instruction: PropTypes.object.isRequired,\n};\n\nexport default InstructionSummary;\n","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/instructions/InstructionDetail.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/instructions/CreateInstruction.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/instructions/EditInstruction.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/questions/AddQuestion.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/actions/question.js",["149"],"import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  GET_QUESTIONS,\n  GET_QUESTION_BY_ID,\n  QUESTION_ERROR,\n  DELETE_QUESTION,\n  ADD_QUESTION,\n  EDIT_QUESTION,\n} from './types';\n\n// Get questions\nexport const getQuestions = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/questions');\n\n    dispatch({\n      type: GET_QUESTIONS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: QUESTION_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete question\nexport const deleteQuestion = (id) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/questions/${id}`);\n\n    dispatch({\n      type: DELETE_QUESTION,\n      payload: id,\n    });\n\n    dispatch(setAlert('Question Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: QUESTION_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add question\nexport const addQuestion = (newQuestion) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post('/api/questions', newQuestion, config);\n    dispatch({\n      type: ADD_QUESTION,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Question Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: QUESTION_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Edit question\nexport const editQuestion = (formData, id) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  try {\n    const res = await axios.put(`/api/questions/${id}`, formData, config);\n    console.log(res.data);\n    dispatch({\n      type: EDIT_QUESTION,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Question Edited', 'success'));\n  } catch (err) {\n    dispatch({\n      type: QUESTION_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/reducers/question.js",["150"],"import {\n  GET_QUESTIONS,\n  QUESTION_ERROR,\n  DELETE_QUESTION,\n  ADD_QUESTION,\n  EDIT_QUESTION,\n} from '../actions/types';\n\nconst initialState = {\n  questions: [],\n  question: null,\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_QUESTIONS:\n      return {\n        ...state,\n        questions: payload,\n        loading: false,\n      };\n    case ADD_QUESTION:\n      return {\n        ...state,\n        questions: [...state.questions, payload],\n        loading: false,\n      };\n    case EDIT_QUESTION:\n      return {\n        ...state,\n        questions: [...state.questions, payload],\n        loading: false,\n      };\n    case DELETE_QUESTION:\n      return {\n        ...state,\n        questions: state.questions.filter(\n          (question) => question._id !== payload\n        ),\n        loading: false,\n      };\n    case QUESTION_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/questions/QuestionList.js",["151","152"],"import React, { useEffect, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getQuestions } from '../../actions/question';\nimport { getPostByID } from '../../actions/post';\nimport Spinner from '../layout/Spinner';\n\nconst QuestionList = ({\n  getQuestions,\n  question: { questions, loading },\n  instructionId,\n  getPostByID,\n  post,\n}) => {\n  useEffect(() => {\n    getQuestions();\n    getPostByID(instructionId);\n  }, [getQuestions, getPostByID]);\n\n  console.log(questions);\n\n  questions =\n    questions &&\n    questions.filter((question) => {\n      return question.postId === instructionId;\n    });\n  console.log(questions);\n\n  const onShowQuestion = () => {\n    if (questions && questions.length > 0) {\n      return questions.map((question) => {\n        if (question) {\n          return (\n            <Link\n              to={{\n                pathname: `/instructions/${question.postId}/questions/${question._id}/edit`,\n                question,\n              }}\n              key={question._id}\n            >\n              <div className='card mt-60'>\n                <div className='card-content grey-text text-darken-3'>\n                  <h6 className='bold'>{question.question}</h6>\n                  <div className='mt-30'>\n                    <h6>\n                      <span className='bold'> Option 1:</span> &nbsp;{' '}\n                      <span className='italic'>{question.answer2}</span>\n                    </h6>\n                    <h6>\n                      <span className='bold'> Option 2:</span> &nbsp;{' '}\n                      <span className='italic'>{question.answer3}</span>\n                    </h6>\n                    <h6>\n                      <span className='bold'> Option 3:</span> &nbsp;{' '}\n                      <span className='italic'>{question.answer4}</span>\n                    </h6>\n                    <h6>\n                      <span className='bold'> Right Answer:</span> &nbsp;{' '}\n                      <span className='italic red-text'>\n                        {question.rightAnswer}\n                      </span>\n                    </h6>\n                  </div>\n                </div>\n              </div>\n            </Link>\n          );\n        } else {\n          return (\n            <h6 className='mt-60 center' key='no-question'>\n              There is no question. Please add question !\n            </h6>\n          );\n        }\n      });\n    } else {\n      return (\n        <h6 className='mt-60 center'>\n          There is no question. Please add question !\n        </h6>\n      );\n    }\n  };\n\n  return loading ? (\n    <Spinner />\n  ) : (\n    <div className='row'>\n      <div className='col s12 m4 offset-m4'>\n        <div className='card z-depth-0 instruction-summary'>\n          <div className='card-content grey-text text-darken-3'>\n            <span className='card-title teal-text center heading'>\n              {post.title}\n            </span>\n            {onShowQuestion()}\n            <Link\n              to={`/instructions/${instructionId}`}\n              className='btn teal lighten-1 z-depth-0 mt-60'\n            >\n              Back\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nQuestionList.propTypes = {\n  getQuestions: PropTypes.func.isRequired,\n  getPostByID: PropTypes.func.isRequired,\n  question: PropTypes.object.isRequired,\n  instructionId: PropTypes.string,\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  question: state.question,\n  instructionId: ownProps.match.params.id,\n  post: state.post.post,\n});\n\nexport default connect(mapStateToProps, { getQuestions, getPostByID })(\n  QuestionList\n);\n","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/questions/EditQuestion.js",["153"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../actions/post';\nimport { Link } from 'react-router-dom';\nimport { editQuestion, deleteQuestion } from '../../actions/question';\n\nconst EditQuestion = ({\n  prevQuestion,\n  editQuestion,\n  deleteQuestion,\n  history,\n  instructionId,\n  questionId,\n}) => {\n  const [formData, setFormData] = useState({\n    question: prevQuestion.question,\n    rightAnswer: prevQuestion.rightAnswer,\n    answer2: prevQuestion.answer2,\n    answer3: prevQuestion.answer3,\n    answer4: prevQuestion.answer4,\n  });\n\n  const { question, rightAnswer, answer2, answer3, answer4 } = formData;\n  console.log(question);\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    editQuestion(formData, prevQuestion._id);\n    history.push(`/instructions/${instructionId}`);\n  };\n\n  const onDeleteQuestion = () => {\n    deleteQuestion(prevQuestion._id);\n    history.push(`/instructions/${instructionId}`);\n  };\n\n  return (\n    <div className='container'>\n      <form onSubmit={(e) => onSubmit(e)} className='white'>\n        <h5 className='grey-text text-darken-3'>Edit Question</h5>\n\n        <div className='input-field'>\n          <label className={question ? 'active' : null} htmlFor='question'>\n            Question\n          </label>\n          <input\n            type='text'\n            name='question'\n            value={question}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n\n        <div className='input-field'>\n          <label\n            className={rightAnswer ? 'active' : null}\n            htmlFor='rightAnswer'\n          >\n            Right Answer\n          </label>\n          <textarea\n            name='rightAnswer'\n            value={rightAnswer}\n            className='materialize-textarea'\n            onChange={(e) => onChange(e)}\n            required\n          ></textarea>\n        </div>\n\n        <div className='input-field'>\n          <label className={answer2 ? 'active' : null} htmlFor='answer2'>\n            Answer 2\n          </label>\n          <textarea\n            name='answer2'\n            value={answer2}\n            className='materialize-textarea'\n            onChange={(e) => onChange(e)}\n            required\n          ></textarea>\n        </div>\n\n        <div className='input-field'>\n          <label className={answer3 ? 'active' : null} htmlFor='answer3'>\n            Answer 3\n          </label>\n          <textarea\n            name='answer3'\n            value={answer3}\n            className='materialize-textarea'\n            onChange={(e) => onChange(e)}\n            required\n          ></textarea>\n        </div>\n\n        <div className='input-field'>\n          <label className={answer4 ? 'active' : null} htmlFor='answer4'>\n            Answer 4\n          </label>\n          <textarea\n            name='answer4'\n            value={answer4}\n            className='materialize-textarea'\n            onChange={(e) => onChange(e)}\n            required\n          ></textarea>\n        </div>\n\n        <div className='flex-row'>\n          <Link\n            to={`/instructions/${instructionId}/questions`}\n            className='btn teal lighten-1 z-depth-0'\n          >\n            Cancel\n          </Link>\n          <div>\n            <button className='btn teal lighten-1 z-depth-0 mr-30'>Save</button>\n            <button\n              onClick={onDeleteQuestion}\n              className='btn teal lighten-1 z-depth-0'\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nEditQuestion.propTypes = {\n  prevQuestion: PropTypes.object.isRequired,\n  instructionId: PropTypes.string,\n  editQuestion: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  prevQuestion: ownProps.location.question,\n  instructionId: ownProps.match.params.instructionId,\n});\n\nexport default connect(mapStateToProps, { editQuestion, deleteQuestion })(\n  EditQuestion\n);\n","/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/student/Landing.js",["154","155"],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/student/StudentInstrucDetail.js",[],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/student/QuestionPopup.js",["156"],"/Users/huongnguyen/MyProjects/InstructionsConnector/client/src/components/student/QuestionDetail.js",["157"],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":5,"column":1,"nodeType":"164","endLine":16,"endColumn":2},{"ruleId":"162","severity":1,"message":"163","line":18,"column":1,"nodeType":"164","endLine":55,"endColumn":2},{"ruleId":"165","severity":1,"message":"166","line":5,"column":8,"nodeType":"167","messageId":"168","endLine":5,"endColumn":12},{"ruleId":"162","severity":1,"message":"163","line":18,"column":1,"nodeType":"164","endLine":63,"endColumn":2},{"ruleId":"162","severity":1,"message":"169","line":4,"column":1,"nodeType":"164","endLine":12,"endColumn":3},{"ruleId":"165","severity":1,"message":"170","line":3,"column":8,"nodeType":"167","messageId":"168","endLine":3,"endColumn":14},{"ruleId":"165","severity":1,"message":"171","line":5,"column":3,"nodeType":"167","messageId":"168","endLine":5,"endColumn":21},{"ruleId":"162","severity":1,"message":"163","line":16,"column":1,"nodeType":"164","endLine":55,"endColumn":2},{"ruleId":"165","severity":1,"message":"172","line":1,"column":28,"nodeType":"167","messageId":"168","endLine":1,"endColumn":36},{"ruleId":"173","severity":1,"message":"174","line":19,"column":6,"nodeType":"175","endLine":19,"endColumn":33,"suggestions":"176"},{"ruleId":"165","severity":1,"message":"177","line":4,"column":10,"nodeType":"167","messageId":"168","endLine":4,"endColumn":17},{"ruleId":"165","severity":1,"message":"178","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":14},{"ruleId":"165","severity":1,"message":"179","line":13,"column":10,"nodeType":"167","messageId":"168","endLine":13,"endColumn":18},{"ruleId":"165","severity":1,"message":"180","line":1,"column":27,"nodeType":"167","messageId":"168","endLine":1,"endColumn":36},{"ruleId":"165","severity":1,"message":"181","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":30},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","Assign arrow function to a variable before exporting as module default","'moment' is defined but never used.","'GET_QUESTION_BY_ID' is defined but never used.","'Fragment' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'instructionId'. Either include it or remove the dependency array.","ArrayExpression",["184"],"'addPost' is defined but never used.","'Link' is defined but never used.","'setAlert' is defined but never used.","'useEffect' is defined but never used.","'createFactory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},"Update the dependencies array to be: [getQuestions, getPostByID, instructionId]",{"range":"187","text":"188"},[516,543],"[getQuestions, getPostByID, instructionId]"]